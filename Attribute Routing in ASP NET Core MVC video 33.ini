Introduction
0:01
this is part thirty three of a Spirit
0:03
led Korra tutorial in this video we'll
0:06
discus attribute routing in asp.net core
0:09
MVC this is the same application that
Use MVC Method
0:11
we've been working with so far in this
0:13
video series notice at the moment we
0:16
have used this use MVC method and then
0:19
specified our default conventional route
0:22
template now what I'm going to do is
0:23
comment this line of code and then use
0:26
the use MVC method without specifying
0:29
any route template this means at the
Attribute Routing
0:34
moment our application does not have any
0:36
routes configured so if we try to
0:38
navigate to any of the routes within our
0:40
application that is to the root of the
0:42
application or slash home or slash home
0:45
slash index we get four zero four notice
0:48
when I reload this web page we get four
0:52
zero four error now what we want to do
0:55
is use attribute routing instead of
0:57
conventional routing so when we navigate
0:59
to the root application URL we want the
1:03
index action of our home controller to
1:05
be executed so within Visual Studio
1:07
let's open home controller with
1:10
attribute routing we use the route
1:12
attribute to define our application
1:14
routes we could place the route
1:15
attribute directly on the controller
1:18
class itself or on the individual action
1:20
methods for now let's just place it on
1:22
this individual action method remember
1:25
when we navigate to our application
1:27
route URL we want this index action
1:29
method to be executed so I am going to
1:31
apply the route attribute notice the
1:34
first parameter to this method is their
1:36
route template since we want this index
1:38
action method to be executed when we
1:40
navigate to the root URL I'm going to
1:42
specify the route template as an empty
1:44
string similarly we also want this index
1:47
action method to be executed if the path
1:49
is /home along the same lines we also
1:54
want this index action method to be
1:56
executed if the path is slash home slash
1:59
index so with these three route
2:02
attribute instances placed on this index
2:04
action method if we navigate to any of
2:07
the following three URLs that is to the
2:09
root application URL or slash home or
2:12
slash homes
2:13
index this index action method of our
2:16
home controller will be executed let's
2:18
prove this at the moment within the
2:21
address bar
2:22
we have our root application URL when I
2:24
reload the index action is executed
2:26
similarly when we navigate to slash home
2:29
or slash home slash index in X action of
2:34
our home controller is executed now if
2:37
we take a look at the conventional route
2:39
template that we worked with in our
2:41
previous video notice as part of the
2:43
route template we specified we want this
2:46
ID route parameter we could do the same
2:49
with attribute routing let's understand
2:51
this with an example I'm going to place
2:53
an instance of route attribute on this
2:55
details action method we want to be able
3:00
to get to this detail section method
3:02
within our home controller if the URL is
3:04
slash home slash details we also want
3:08
the ID of the employee to be passed to
3:12
this detail section method and we want a
3:14
route parameter for that and we're going
3:16
to specify that as part of this
3:19
attribute route template to specify a
3:22
route parameter we include a pair of
3:24
curly braces and then within the curly
3:26
braces we specify the name of the
3:28
parameter in this case the name is ID at
3:32
the moment this ID Road parameter is
3:34
mandatory meaning this detail section
3:37
method of our home controller is
3:38
executed only if there is a value for
3:41
this ID road parameter in the URL path
3:44
let's save our changes and take a look
3:46
at the browser notice when we navigate
3:48
to slash home slash details slash one we
3:52
see the details of the employee whose ID
3:54
is one now if we change the ID value to
3:56
two based it's the employee details
3:58
whose ID is one that's because within
4:00
our application we have hard-coded the
4:03
employee ID to one let's change this to
4:05
use this incoming ID parameter notice
4:11
now when we reload the page we see
4:13
employee details whose ID is two
4:15
similarly when we change the ID to three
4:17
we see that specific employee details
4:20
but the important thing to note here is
4:22
if we do not specify a value for the ID
4:25
route parameter week
4:26
at 4:04 era this is because at the
4:30
moment this idea of parameter is
4:32
mandatory to make it optional just like
4:35
conventional routing use a question mark
4:37
at the end of the parameter with this
4:40
change this ID method parameter may or
4:43
may not receive a value from the URL so
4:46
let's make this integer in nullable
4:48
integer and then use c-sharp null
4:51
coalescing operator here so basically
4:53
with this expression we are telling if
4:55
this incoming ID method parameter is not
4:59
null then use that value if it is null
5:01
then use this default value of 1 so
5:04
let's save our changes and take a look
5:05
at the browser at the moment within the
5:08
URL we don't have a value for the ID
5:11
road parameter so when I reload this
5:13
page we see the details of the employee
5:15
whose ID is 1 but then if we specify a
5:18
value for the ID road parameter we see
5:20
that specific employee details with
5:25
attribute routing the name of the
5:27
controller class or the name of the
5:29
action methods played no role in which
5:32
action is selected for a given incoming
5:34
URL path let me explain what I mean with
5:37
an example let's change the name of this
5:39
controller class to welcome controller
5:42
and we also have to change the
5:44
constructor name here to the same and
5:46
let's also change the name of this
5:48
action method to list with this change
5:52
we are basically saying if the incoming
5:54
URL path is any of these three then
5:57
execute this action method within this
5:59
controller class it doesn't really
6:00
matter what is the name of this action
6:02
method or this controller class let's
6:05
actually prove this let's change the URL
6:08
to slash home slash index notice we have
6:12
an error this is because it's looking
6:15
for a view file with the name list dot
6:17
CSS HTML and that's because the action
6:20
method name is list so by default it
6:23
looks for a view file with name list dot
6:25
CSS HTML but we know with this list
6:28
action method we actually want to use
6:30
this index dot CSS HTML file which is
6:33
present in the home folder and that home
6:35
folder is in the views folder so let's
6:37
specify the full absolute
6:39
part two this index dot CS HTML view
6:42
file we do that within the view method
6:47
so within the root project directory
Index View
6:50
look for views folder in that we have
6:52
home and in that we have index dot CSS
6:56
HTML file notice now when we reload the
7:01
page we see the index view as expected
7:04
so the point that I'm trying to make is
7:06
the action method names and the
7:09
controller name doesn't really matter if
7:11
we have routes specified this way let's
7:15
change the names back now we already
7:19
discussed we can apply this route
7:20
attribute on the controller class as
7:22
well as on these individual action
7:25
methods at the moment we have it only
7:27
applied on the individual action methods
7:29
and as a result we have a lot of
7:31
repetition notice this route home it is
7:34
repeated twice on the index action and
7:36
once on the details action we can make
7:39
these routes less repetitive by applying
7:42
the route attribute on the controller
7:43
class as well so what I'm going to do is
7:46
apply the route attribute on the
7:49
controller class and then I'm going to
7:53
set the route path to home this means we
7:56
can remove this route attribute from the
7:58
index action altogether and we can also
8:01
remove home and from our detail section
8:03
method we can remove home so with this
Exception Method
8:08
change in place the route attribute that
8:11
the controller is combined with the
8:14
route attribute on these individual
8:16
actions so for example to get this in
8:18
exception method we could use just slash
8:22
home or slash home slash index let's
8:25
prove this notice when we navigate to
8:28
slash home slash index we see the list
8:30
of employees similarly when we navigate
8:32
to just slash home they still see the
8:35
list of employees but when we navigate
8:36
to the route application URL we see 4 0
8:39
4 to fix this all we have to do is on
8:43
our index action let's include another
8:45
route attribute and then set the path to
8:48
just four slash or tilde four slash
8:53
notice now when we reload this root
8:56
application URL we see the list of
8:58
employees so the important point to keep
9:01
in mind is when around begins with four
9:03
slash or tilde four slash the controller
9:07
route template is not combined with the
9:10
individual action method route template
9:12
these attribute routes also support
9:15
token replacement to include a token we
9:18
use a pair of square brackets and then
9:20
specify the token in this case
9:22
controller on the individual action
9:24
methods we can use the action token
Action Method
9:27
let's also do the same with the details
9:29
action method with these changes in
9:33
place this token action is replaced with
9:35
the action method name in this case
9:37
details and this token controller is
9:39
replaced with the controller name in
9:42
this case home this is a powerful
9:44
technique because later if we change the
9:47
name of the controller or the names of
9:48
these action methods we don't have to
9:51
change our routing configuration the
9:53
application works with these new names
9:55
now let's quickly test these tokens
9:59
notice when we navigate to the root URL
10:02
the index action is executed and that's
10:04
because of this route and when we
10:06
navigate to /home
10:08
again the index action is executed
10:11
that's because of this route working in
10:15
combination with this controller token
10:17
notice in the URL we have this path home
10:20
so the controller token is replaced with
10:22
home and then we made the index action
10:24
within this home controller the default
10:26
action by including an empty route
10:29
template now if we navigate to slash
10:31
home slash index notice again the index
10:36
action is executed slash home slash
10:38
index is working because of this route
10:41
attribute working in combination with
10:44
this route attribute so the token
10:46
controller is replaced with home and the
10:49
token action is replaced with index so
10:51
the index action within our home
10:53
controller is executed and we see the
10:55
list of employees now instead of
10:57
including this action token on every
11:01
individual action method we can include
11:03
it just once on the controller - in
11:06
on the controller we include a four
11:08
slash and then a pair of square brackets
11:11
and then the token action since we have
11:14
the action token at the controller we
11:16
don't need it on the individual action
11:18
method anymore notice now when we
Index Action
11:24
navigate the slash home slash index the
11:26
index action is executed similarly when
11:28
we navigate to the root application URL
11:30
again the index action is executed but
11:33
when we navigate to slash home we see
11:35
four zero four this is because it
11:38
expects both the controller name and
11:40
action name in the URL but at the moment
11:43
we only have the controller name so what
11:46
we want to do is make this in X action
11:48
method the default action for home
11:51
controller in previous versions of MVC
11:53
we could easily do this by specifying
11:56
action equals index but in asp.net core
11:59
MVC we cannot do this anymore
12:01
one hacky way of doing this is by
12:04
including tilde four slash home notice
12:10
now when we navigate a slash home the
12:12
index action is executed for other
12:16
application conventional routing works
12:18
just fine so I'm going to delete all
12:20
these route attributes and in startup
12:24
dot CS file uncomment this use MVC
12:28
method that has the default route
12:30
template and then delete this use MVC
12:32
method with attribute routing we use
12:37
route attribute to define our routes
12:39
route attribute can be applied on the
12:41
controller itself or the controller
12:43
action methods with attribute routing
12:45
routes are placed next to the action
12:47
methods that will actually use them
12:49
attribute routes offer a bit more
12:51
flexibility than conventional routes in
12:54
general conventional routes are used for
12:56
controllers that serve HTML pages and
12:58
attribute routes for controllers that
13:01
serve rest api's however there's nothing
13:04
stopping us from mixing conventional
13:06
routing with attribute routing in a
13:09
single application to get a bit more
13:11
flexibility with routes attribute routes
13:14
are hierarchical this means the route
13:16
attributes on the controller are
13:18
combined with the route attributes on
13:20
the
13:20
visual action methods however one very
13:23
important point to keep in mind is the
13:25
controller route template is not
13:27
combined with the action method route
13:28
template if the route template on the
13:31
action method begins with a false lash
13:33
or tilde or slash we can also use tokens
13:37
like controller and action with
13:39
attribute routing this is a very
13:41
powerful technique because if we change
13:44
the name of the controller or an action
13:45
method we don't have to change the route
13:48
template the application just works
13:50
that's it in this video thank you for
13:52
listening
14:08
[Music]
